@page "/"
@using FoodBee.Models
@using FoodBee.Services

<div class="map @MapCssClass"></div>

<div class="title @TitleCssClass">
    <div class="title-sub">
        Welcome
    </div>
    <div class="title-main">
        FoodBee
    </div>
    <div class="title-sub">
        <i class="fa-solid fa-location-dot"></i> YYC Beer Festival
    </div>
</div>

<div class="menu">
    <div class="menu-container">
        <div style="visibility: hidden"><span class="menu-icon">1</span></div>
        <div style="visibility: hidden"><span class="menu-icon">2</span></div>
 
      
        <span class="hex-wrap">
            @* Search/clear filters hex *@
            @if (collapseMenu)
            {
                <span class="hex-wrap">
                    <NavLink style="color: unset" href="search">
                        <div class="ripple" style="@ClearBtn">
                            <span class="menu-icon">
                                <i class="fa-solid fa-magnifying-glass"></i>
                            </span>
                            <span class="icon-label">
                                Search
                            </span>
                        </div>
                    </NavLink>
                </span>
            } 
            else
            {         
                <div class="ripple" @onclick="@ClearAll" style="@ClearBtn">
                    <span class="menu-icon">
                        <i class="fa-solid fa-x"></i>
                    </span>
                    <span class="icon-label">
                        Clear all
                    </span>
                </div>              
            }
        </span>

        @*First two filters for spacing purposes*@
        @for (int i = 0; i < 2; i++)
        {
            var index = i;
            <div class="@MenuCssClass @ActiveCssClass(index)" @onclick="(e => FilterService.ToggleFilter(index))">
                <span class="menu-icon">
                    <i class="fa-solid @FilterService.Filters[i].IconSelector"></i>
                </span>
                <span class="icon-label">
                    @FilterService.Filters[i].Name
                </span>
            </div>
        }

        <span class="hex-wrap"> 
            <div class="ripple" @onclick="@ToggleNavMenu" style="@ConfirmBtn">
                @*Filter/confirm filters hex buttons *@
                @if (collapseMenu)
                {
                        <span class="menu-icon">
                            <i class="fa-solid fa-layer-group"></i>
                        </span>
                        <span class="icon-label">
                            @FormatNumActive() Filters
                        </span>
                } 
                else
                {     
                        <span class="menu-icon">
                            <i class="fa-solid fa-check"></i>
                        </span>
                        <span class="icon-label">
                            Confirm
                        </span>     
                }
            </div>
        </span>

        @*Remainging fitler hex buttons *@
        @for (int i = 2; i < FilterService.Filters.Count(); i++)
        {
            var index = i;
            <div class="@MenuCssClass @ActiveCssClass(index)" @onclick="(e => FilterService.ToggleFilter(index))">
                <span class="menu-icon">
                    <i class="fa-solid @FilterService.Filters[i].IconSelector"></i>
                </span>
                <span class="icon-label">
                    @FilterService.Filters[i].Name
                </span>
            </div>
        }
    </div>
</div>

@*Shortcut to list saved products*@
@*<button type="button" class="btn btn-warning btn-rounded btn-lg map-list-btn"><i class="fa-solid fa-bookmark"></i></button>*@

@*@if (FilterService.NumActive() > 0 && collapseMenu)
{
    <div class="btn-group map-list-btn" role="group" aria-label="Basic example">
        <button type="button" class="btn btn-info active">Map</button>
        <button type="button" class="btn btn-info">List</button>
    </div>   
}*@

@code {

    // Whether the filte menu is open or not
    private bool collapseMenu = true;

    // On clear filter click
    private void ClearAll()
    {
        FilterService.ClearFilters();
        ToggleNavMenu();
    }

    // SHow / hide filter menu
    private void ToggleNavMenu() => collapseMenu = !collapseMenu;

    //private string FiltersStr() => string.Join(",", FilterService.Filters.Where(f => f.Active).Select(f => f.Name));

    // CSS Class toggles and individual styles 
    private string ActiveCssClass(int i) => FilterService.Filters[i].Active ? "active-filter" : null;
    private string MenuCssClass => collapseMenu ? "hide-menu" : null;
    private string TitleCssClass => collapseMenu ? null : "hide-menu";
    private string MapCssClass => collapseMenu ? null : "blur-map";
    private string ConfirmBtn => collapseMenu ? null : "background-color: #8bc34a;";
    private string ClearBtn => collapseMenu ? null : "background-color: #ff5722;";

    // Surround number of active filters in brackets like "(6) Filters"
    private string FormatNumActive() => FilterService.NumActive() > 0 ? "(" + FilterService.NumActive() + ")" : "";


}